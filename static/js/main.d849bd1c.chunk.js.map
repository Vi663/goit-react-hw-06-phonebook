{"version":3,"sources":["components/Filter/Filter.module.css","components/MainContainer/MainContainer.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/App/App.jsx","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","MainContainer","children","className","ContactForm","onSubmit","initialContact","name","number","useState","contact","setContact","handleChange","event","target","value","prevState","nameInputId","uuidv4","numberInputId","resetContact","s","contactForm","autoComplete","e","preventDefault","contactLabel","htmlFor","contactInput","type","id","onChange","pattern","title","required","contactBtn","Filter","filterLabel","filterInput","ContactList","contacts","onDeleteContact","length","contactList","map","contactItem","contactItemName","contactItemNumber","onClick","App","getLocalStorageItem","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","find","toast","error","currentTarget","normalizedFilter","toLowerCase","includes","getVisibleContacts","contactId","theme","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d849bd1c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__3iz37\",\"filterInput\":\"Filter_filterInput__3cB4y\"};","export const MainContainer = ({ children }) => {\r\n  return (\r\n    <div className=\"mainContainer\">{children}</div>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport function ContactForm ({onSubmit}) {\r\n  \r\n  const initialContact = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  \r\n  const [contact, setContact] = useState (initialContact);\r\n  const { name, number } = contact;\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    setContact((prevState) => ({\r\n      ...prevState, [name]: value\r\n    }))\r\n  };\r\n\r\n  const nameInputId = uuidv4();\r\n  const numberInputId = uuidv4();\r\n\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    onSubmit(contact)\r\n    resetContact()\r\n  }\r\n\r\n  const resetContact = () => {\r\n    setContact({ ...initialContact });\r\n  }\r\n\r\n  return (\r\n    <form className={s.contactForm} autoComplete=\"on\" onSubmit={handleSubmit}>\r\n      <label\r\n        className={s.contactLabel}\r\n        htmlFor={nameInputId}\r\n      >Name</label>\r\n      <input\r\n        className={s.contactInput}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        id={nameInputId}\r\n        onChange={handleChange}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n        \r\n      <label\r\n        htmlFor={numberInputId}\r\n        className={s.contactLabel}\r\n      >Phone number</label>\r\n      <input\r\n        className={s.contactInput}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        value={number}\r\n        id={numberInputId}\r\n        onChange={handleChange}\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n      />\r\n      <button className={s.contactBtn}\r\n        type=\"submit\"\r\n        name=\"submit\">Add Contact\r\n      </button>\r\n    </form>\r\n  )\r\n}","import React from 'react';\r\nimport s from './Filter.module.css'\r\n\r\nexport const Filter = ({ value, onChange }) => (\r\n  <label className={s.filterLabel}>\r\n    Find contacts by name\r\n    <input className={s.filterInput} type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\n","import React from 'react';\r\nimport s from './ContactList.module.css'\r\n\r\n\r\nexport function ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <div>\r\n      {!contacts.length &&\r\n        <p className={s.contactList}>There are no contacts yet</p>}\r\n      {contacts.length &&\r\n        <ul className={s.contactList}>\r\n          {contacts.map(({ id, name, number }) => (\r\n            <li key={id} className={s.contactItem}>\r\n              <span className={s.contactItemName}>{name} </span>\r\n              <span className={s.contactItemNumber}>{number}</span>\r\n              <button\r\n                type=\"button\"\r\n                className={s.contactBtn}\r\n                onClick={() => onDeleteContact(id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      }\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { v4 as uuidv4 } from 'uuid';\nimport { MainContainer } from \"../MainContainer/MainContainer\";\nimport { ContactForm } from \"../ContactForm/ContactForm\";\nimport { Filter } from \"../Filter/Filter\";\nimport { ContactList } from \"../ContactList/ContactList\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport function App() {\n  const getLocalStorageItem = () => {\n    return JSON.parse(window.localStorage.getItem('contacts'))\n  }\n  const [contacts, setContacts] = useState(getLocalStorageItem())\n  const [filter, setFilter] = useState('')\n\n  const formSubmitHandler = ({name, number}) => {\n    const found = contacts.find((contact) => contact.name === name || contact.number === number);\n     \n    if (!found) {\n      setContacts((prevState) => ([...prevState, { id: uuidv4(), name, number }]))\n    } else {\n      toast.error(`This name or number is already in contacts`)\n    }\n  }\n  \n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts))\n  }, [contacts])\n\n  useEffect(() => {\n    setContacts(getLocalStorageItem())\n  }, [])\n\n  const findByName = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const deleteContact = contactId => {\n    setContacts(prevState => (prevState.filter(contact => (contact.id !== contactId))))\n  };\n\n  return (\n    <MainContainer>\n      <h1>Phonebook</h1>\n      <ContactForm\n        onSubmit={formSubmitHandler}\n      />\n      <Filter\n        value={filter}\n        onChange={findByName}\n      />\n      <ContactList\n        contacts={getVisibleContacts()}\n        onDeleteContact={deleteContact}\n      />\n      <ToastContainer theme=\"colored\" autoClose={3000} />\n    </MainContainer>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3dzac\",\"contactInput\":\"ContactForm_contactInput__hy7jP\",\"contactLabel\":\"ContactForm_contactLabel__1AhuL\",\"contactBtn\":\"ContactForm_contactBtn__38X6F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1NlUK\",\"contactItem\":\"ContactList_contactItem__1b0oH\",\"contactBtn\":\"ContactList_contactBtn__169nR\",\"contactItemName\":\"ContactList_contactItemName__35NlH\",\"contactItemNumber\":\"ContactList_contactItemNumber__4LfvI\"};"],"sourceRoot":""}