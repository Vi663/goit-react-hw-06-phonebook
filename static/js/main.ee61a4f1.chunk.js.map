{"version":3,"sources":["components/Filter/Filter.module.css","redux/contacts/contactsActions.js","redux/contacts/contactsReduser.js","redux/store.js","components/MainContainer/MainContainer.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/App/App.jsx","index.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","filterContacts","target","value","deleteContact","itemsReducer","createReducer","contactsActions","state","filter","contact","filterReducer","_","combineReducers","items","store","configureStore","reducer","contacts","contactsReduser","MainContainer","children","className","ContactForm","onSubmit","initialState","useState","setstate","nameInputId","numberInputId","handleChange","event","prevState","resetContact","s","contactForm","autoComplete","e","preventDefault","contactLabel","htmlFor","contactInput","type","onChange","pattern","title","required","contactBtn","mapDispatchToProps","connect","onFilter","filterValue","filterInput","ownProps","itemData","find","item","dispatch","onRemoveContact","contactItem","contactItemName","contactItemNumber","onClick","lowerCaseFilter","toLowerCase","includes","isShowContacts","length","contactList","map","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee61a4f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__3iz37\",\"filterInput\":\"Filter_filterInput__3cB4y\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContact = createAction('contacts/add', ({ name, number }) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n}))\r\n\r\nconst filterContacts = createAction('contacts/filter', ({ target }) => ({\r\n  payload: target.value,\r\n}))\r\n\r\nconst deleteContact = createAction('contacts/delete')\r\n\r\nexport default { addContact, deleteContact, filterContacts };","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactsActions from './contactsActions';\r\n\r\nconst INITIAL_ITEMS = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst filterContacts = (_, { payload }) => payload;\r\nconst addContact = (state, { payload }) => [payload, ...state];\r\nconst deleteContact = (state, { payload }) => {\r\n  return state.filter(contact => contact.id !== payload);\r\n};\r\n\r\nconst itemsReducer = createReducer(INITIAL_ITEMS, {\r\n  [contactsActions.addContact]: addContact,\r\n  [contactsActions.deleteContact]: deleteContact,\r\n});\r\nconst filterReducer = createReducer('', {\r\n  [contactsActions.filterContacts]: filterContacts,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReduser from '../redux/contacts/contactsReduser';\r\n\r\n// import { createStore } from 'redux';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n// import { toast } from 'react-toastify';\r\n\r\n// const initialState = {\r\n//   contacts: {\r\n//     items: [],\r\n//     filter: ''\r\n//   }\r\n// };\r\n\r\n// const reducer = (state = initialState, { type, payload }) => {\r\n//   switch (type) {\r\n//     case 'contacts/create':\r\n//       const found = state.contacts.items.find((contact) => contact.name === payload.name || contact.number === payload.number);\r\n     \r\n//       if (!found) {\r\n//         return {\r\n//           items: state.contacts.items.push({ id: uuidv4(), ...payload })\r\n//         }\r\n//       }\r\n//       else {\r\n//         toast.error(`This name or number is already in contacts`)\r\n//       }\r\n//     // case 'contacts/delete':\r\n//     // case 'contacts/filter':\r\n//       break\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export const store = createStore(reducer);\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReduser,\r\n  },\r\n});\r\n\r\nexport default store;","export default function MainContainer({ children }) {\r\n  return (\r\n    <div className=\"mainContainer\">{children}</div>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contactsActions';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport function ContactForm({onSubmit}) {\r\n  \r\n  const initialState = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  \r\n  const [state, setstate] = useState(initialState)\r\n  \r\n  const nameInputId = uuidv4();\r\n  const numberInputId = uuidv4();\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    setstate((prevState) => ({\r\n      ...prevState, [name]: value\r\n    }))\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    const { name, number } = state;\r\n\r\n    if (name && number) {\r\n      const NewContact = { name, number };\r\n      onSubmit(NewContact)\r\n      resetContact()\r\n    }\r\n  }\r\n\r\n  const resetContact = () => {\r\n    setstate({ ...initialState });\r\n  }\r\n\r\n  const { name, number } = state;\r\n  return (\r\n    <form className={s.contactForm} autoComplete=\"on\" onSubmit={handleSubmit}>\r\n      <label\r\n        className={s.contactLabel}\r\n        htmlFor={nameInputId}\r\n      >Name</label>\r\n      <input\r\n        className={s.contactInput}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        id={nameInputId}\r\n        onChange={handleChange}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n        \r\n      <label\r\n        htmlFor={numberInputId}\r\n        className={s.contactLabel}\r\n      >Phone number</label>\r\n      <input\r\n        className={s.contactInput}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        value={number}\r\n        id={numberInputId}\r\n        onChange={handleChange}\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n      />\r\n      <button className={s.contactBtn}\r\n        type=\"submit\"\r\n        name=\"submit\">Add Contact\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onSubmit: contactsActions.addContact,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contactsActions';\r\nimport s from './Filter.module.css'\r\n\r\nconst Filter = ({ contacts, filterValue, onFilter }) => {\r\n\r\n  return (\r\n    <div>\r\n      <p>Find contacts by name</p>\r\n      <input className={s.filterInput}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filterValue}\r\n        onChange={onFilter}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contacts.items,\r\n    filterValue: state.contacts.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onFilter: contactsActions.filterContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contactsActions';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactListItem = ({ name, number, onRemoveContact }) => (\r\n  <li className={s.contactItem}>\r\n    <span className={s.contactItemName}>{name}</span>\r\n    <span className={s.contactItemNumber}>{number}</span>\r\n    <button\r\n      className={s.contactBtn}\r\n      type=\"button\"\r\n      onClick={onRemoveContact}>\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const itemData = state.contacts.items.find(item => ownProps.id === item.id);\r\n\r\n  return {\r\n    ...itemData,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onRemoveContact: () => dispatch(contactsActions.deleteContact(ownProps.id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContactListItem from \"./ContactListItem\";\r\nimport s from './ContactList.module.css'\r\n\r\n\r\nexport function ContactList({ contacts }) {\r\n    const isShowContacts = contacts.length > 0;\r\n  return (\r\n    <div>\r\n      {isShowContacts && (\r\n        <ul className={s.contactList}>\r\n          {contacts.map(({ id }) => (\r\n            <ContactListItem key={id} id={id} />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const { items, filter } = state.contacts;\r\n  const lowerCaseFilter = filter.toLowerCase();\r\n\r\n  const getFilteredContacts = () => {\r\n    if (filter) {\r\n      return items.filter(item =>\r\n        item.name.toLowerCase().includes(lowerCaseFilter),\r\n      );\r\n    }\r\n\r\n    return items;\r\n  };\r\n\r\n  return {\r\n    contacts: getFilteredContacts(),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);","import React, { useState, useEffect } from 'react';\n// import { ToastContainer, toast } from 'react-toastify';\nimport { v4 as uuidv4 } from 'uuid';\nimport MainContainer from \"../MainContainer/MainContainer\";\nimport { ContactForm } from \"../ContactForm/ContactForm\";\nimport Filter from \"../Filter/Filter\";\nimport ContactList from \"../ContactList/ContactList\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function App() {\n  // const getLocalStorageItem = () => {\n  //   return JSON.parse(window.localStorage.getItem('contacts'))\n  // }\n\n  // const [contacts, setContacts] = useState(getLocalStorageItem())\n  // const [filter, setFilter] = useState('')\n  // console.log(store.getState())\n  // const formSubmitHandler = (data) => {\n    \n  //   const found = contacts.find((contact) => contact.name === data.name || contact.number === data.number);\n     \n  //   if (!found) {\n  //     setContacts((prevState) => ([...prevState, { id: uuidv4(), name: data.name, number: data.number }]))\n  //   }\n  //   else {\n  //     toast.error(`This name or number is already in contacts`)\n  //   }\n  // }\n  \n  // useEffect(() => {\n  //   window.localStorage.setItem('contacts', JSON.stringify(contacts))\n  // }, [contacts])\n\n  // useEffect(() => {\n  //   setContacts(getLocalStorageItem())\n  // }, [])\n\n  // const findByName = e => {\n  //   setFilter(e.currentTarget.value);\n  // };\n\n  // const getVisibleContacts = () => {\n  //   const normalizedFilter = filter.toLowerCase();\n  //   return contacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(normalizedFilter)\n  //   );\n  // };\n\n  // const deleteContact = contactId => {\n  //   setContacts(prevState => (prevState.filter(contact => (contact.id !== contactId))))\n  // };\n\n  return (\n    <MainContainer>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n      {/* <ToastContainer theme=\"colored\" autoClose={3000} /> */}\n    </MainContainer>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1NlUK\",\"contactItem\":\"ContactList_contactItem__1b0oH\",\"contactBtn\":\"ContactList_contactBtn__169nR\",\"contactItemName\":\"ContactList_contactItemName__35NlH\",\"contactItemNumber\":\"ContactList_contactItemNumber__4LfvI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3dzac\",\"contactInput\":\"ContactForm_contactInput__hy7jP\",\"contactLabel\":\"ContactForm_contactLabel__1AhuL\",\"contactBtn\":\"ContactForm_contactBtn__38X6F\"};"],"sourceRoot":""}